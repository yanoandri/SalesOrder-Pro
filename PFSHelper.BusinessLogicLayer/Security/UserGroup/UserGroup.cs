


using System;
using System.Diagnostics;
using System.Collections;
using System.Data;
using System.Data.SqlClient;
using System.Xml.Serialization;
using PFSHelper.DataAccessLayer;

#region Region: Revision History///////////////////////////////////////////////////////////////
// Copyright (c) 2011, PT. Profescipta Wahanatehnik. All Rights Reserved.
//
// This software, all associated documentation, and all copies
// are CONFIDENTIAL INFORMATION of PT. Profescipta Wahanatehnik. 
// http://www.profescipta.com
//
// $Workfile:$
// $Revision:$
// $Date:$
//
// DESCRIPTION
//
// $Log:$
//
#endregion

namespace PFSHelper.BusinessLogicLayer
{
	//Standard class autogenerated by PFS Generator v5.0
	public partial class UserGroup
	{
		#region Region: Member Variables///////////////////////////////////////////////////////////
		protected int m_iUserGroupID = 0;
		protected int m_iUserID = 0;
        protected string m_sUserName = "NONE";
		protected int m_iGroupID = 0;
        protected string m_sGroupName = "NONE";
		protected string m_sFullName = "NONE";
		#endregion
		
		#region Region: Constructor////////////////////////////////////////////////////////////////
		public UserGroup()
		{
			m_iUserGroupID = -1;
		}	
		public UserGroup(int iID)
		{
			m_iUserGroupID = iID;
		}

		public UserGroup(
			int iUserGroupID,
			int iUserID,
			int iGroupID
			)
		{
			m_iUserGroupID = iUserGroupID;
			m_iUserID = iUserID;
			m_iGroupID = iGroupID;
		}

		#endregion
		
		#region Region: Properties/////////////////////////////////////////////////////////////////
		
		public int UserGroupID
		{
			get {return m_iUserGroupID;}
			set {m_iUserGroupID = value;}
		}

		public int UserID
		{
			get {return m_iUserID;}
			set {m_iUserID = value;}
		}

        public string UserName
        {
            get { return m_sUserName; }
            set { m_sUserName = value; }
        }

		public int GroupID
		{
			get {return m_iGroupID;}
			set {m_iGroupID = value;}
		}

        public string GroupName
        {
            get { return m_sGroupName; }
            set { m_sGroupName = value; }
        }

		public string FullName
		{
			get {return m_sFullName;}
			set {m_sFullName = value;}
		}
		#endregion
		
		#region Region: Data Access Methods////////////////////////////////////////////////////////
		public bool DAL_Load()
        {
			bool bIsSuccess = false;
            try
            {
				using(SqlDataReader drUserGroup = SqlHelper.ExecuteReader(PFSHelper.DataAccessLayer.PFSDataBaseAccess.ConnectionString, "uspPFS_UserGroupGet", m_iUserGroupID))
            	{
					if(drUserGroup.Read())
            		{      
						m_iUserGroupID = Convert.ToInt32(drUserGroup["PFS_USER_GROUP_ID"]);
						m_iUserID = Convert.ToInt32(drUserGroup["PFS_USER_ID"]);
						m_iGroupID = Convert.ToInt32(drUserGroup["PFS_GROUP_ID"]);
						m_sUserName = Convert.ToString(drUserGroup["USER_NAME"]);
						m_sFullName = Convert.ToString(drUserGroup["FULL_NAME"]);
						m_sGroupName = Convert.ToString(drUserGroup["GROUP_NAME"]);
						bIsSuccess = true;
           		 	}
            	}
				return bIsSuccess;
			}
			catch(Exception ex)
			{
				throw ex;
			}
        }	
		
		public bool DAL_Load(int iID)
        {
			bool bIsSuccess = false;
            try
            {
				using(SqlDataReader drUserGroup = SqlHelper.ExecuteReader(PFSHelper.DataAccessLayer.PFSDataBaseAccess.ConnectionString, "uspPFS_UserGroupGet",iID))
            	{
					if(drUserGroup.Read())
            		{      
						m_iUserGroupID = Convert.ToInt32(drUserGroup["PFS_USER_GROUP_ID"]);
						m_iUserID = Convert.ToInt32(drUserGroup["PFS_USER_ID"]);
						m_iGroupID = Convert.ToInt32(drUserGroup["PFS_GROUP_ID"]);
						m_sUserName = Convert.ToString(drUserGroup["USER_NAME"]);
						m_sFullName = Convert.ToString(drUserGroup["FULL_NAME"]);
						m_sGroupName = Convert.ToString(drUserGroup["GROUP_NAME"]);
						bIsSuccess = true;
           		 	}
            	}
				return bIsSuccess;
			}
			catch(Exception ex)
			{
				throw ex;
			}
        }
		
		public bool DAL_Update() 
		{
			SqlConnection oConn = PFSDataBaseAccess.OpenConnection();
            SqlTransaction oTrans = oConn.BeginTransaction();
			try
			{
				bool bIsSuccess = false;
				bIsSuccess = DAL_Update(oTrans);
				if (!bIsSuccess)
                {
                    oTrans.Rollback();
                    return false;
                }
				
				oTrans.Commit();
                return true;
			}
			catch (SqlException ex)
            {
                oTrans.Rollback();
                throw (ex);
            }
            finally
            {
                PFSDataBaseAccess.CloseConnection(ref oConn);
            }
		}		
		public bool DAL_Update(SqlTransaction p_oTrans) 
		{
			try
			{
				bool bIsSuccess = false;
				if (m_iUserGroupID > 0)
				{
					int iRowAffected = SqlHelper.ExecuteNonQuery(p_oTrans, "uspPFS_UserGroupUpdate",
					m_iUserGroupID,
										m_iUserID,
										m_iGroupID
					);
					bIsSuccess = (iRowAffected > 0);
				}
				else
				{
					bIsSuccess = DAL_Add(p_oTrans);
				}			
				return (bIsSuccess);
			}
			catch (Exception ex)
			{
                throw ex;
			}
		}
		
		
		public bool DAL_Delete() 
        {
            SqlConnection oConn = PFSDataBaseAccess.OpenConnection();
            SqlTransaction oTrans = oConn.BeginTransaction();
            try
            {
                bool bIsSuccess = DAL_Delete(oTrans);

                if (!bIsSuccess)
                {
                    oTrans.Rollback();
                    return false;
                }

                oTrans.Commit();
                return true;
            }
            catch (SqlException ex)
            {
                oTrans.Rollback();
                throw (ex);
            }
            finally
            {
                PFSDataBaseAccess.CloseConnection(ref oConn);
            }
        }
        public bool DAL_Delete(SqlTransaction p_oTrans) 
        {
            try
            {

                int iError = Convert.ToInt32(SqlHelper.ExecuteScalar(p_oTrans, "uspPFS_UserGroupDeleteWithReturnErrorCode", m_iUserGroupID));

                return (iError == 0);
            }
            catch (SqlException ex)
            {
                throw (ex);
            }
        }	
        
		public bool DAL_Add() 
        {
            SqlConnection oConn = PFSDataBaseAccess.OpenConnection();
            SqlTransaction oTrans = oConn.BeginTransaction();
            try
            {
                bool bIsSuccess = DAL_Add(oTrans);

                if (!bIsSuccess)
                {
                    oTrans.Rollback();
                    return false;
                }

                oTrans.Commit();
                return true;
            }
            catch (SqlException ex)
            {
                oTrans.Rollback();
                throw (ex);
            }
            finally
            {
                PFSDataBaseAccess.CloseConnection(ref oConn);
            }
        }
		public bool DAL_Add(SqlTransaction p_oTrans)
        {
            try
            {
                m_iUserGroupID = Convert.ToInt32(SqlHelper.ExecuteScalar(p_oTrans, "uspPFS_UserGroupAdd", 

					m_iUserID,
					m_iGroupID
					));
					
				bool bIsSuccess = (m_iUserGroupID >=0);
				
				
				return bIsSuccess;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
		
		//*** This section is a temporary data access for combo, Radio Button etc. ToDo: Delete this and use the proper class definition
		public static SqlDataReader DAL_UserGroupUserList()
		{
			try
			{
				SqlDataReader dr = SqlHelper.ExecuteReader(PFSHelper.DataAccessLayer.PFSDataBaseAccess.ConnectionString, "LOOKUP_spPFS_UserGroupUserList"); 
				return dr;
			}
			catch(Exception ex)
			{
				throw(ex);
			}			
		}		
		public static SqlDataReader DAL_UserGroupGroupList()
		{
			try
			{
				SqlDataReader dr = SqlHelper.ExecuteReader(PFSHelper.DataAccessLayer.PFSDataBaseAccess.ConnectionString, "LOOKUP_spPFS_UserGroupGroupList"); 
				return dr;
			}
			catch(Exception ex)
			{
				throw(ex);
			}			
		}		
		#endregion
	} //** Class
} //** Name Space
